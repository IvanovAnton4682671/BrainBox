#Secret
apiVersion: v1
kind: Secret
metadata:
  name: brainbox-minio-secret
  namespace: brainbox
type: Opaque
stringData:
  accesskey: minioadmin
  secretkey: minioadmin

---
#PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: brainbox-minio-persistentvolumeclaim
  namespace: brainbox
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
#ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: brainbox-minio-configmap
  namespace: brainbox
data:
  MINIO_BROWSER: "on"
  MINIO_DOMAIN: "minio.brainbox"

---
#Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: brainbox-minio-deployment
  namespace: brainbox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: brainbox-minio
  template:
    metadata:
      labels:
        app: brainbox-minio
    spec:
      containers:
        - name: minio
          image: minio/minio
          command: ["/usr/bin/docker-entrypoint.sh"]
          args: ["server", "/data", "--console-address", ":9001"]
          ports:
          - containerPort: 9000
            name: minio-api
          - containerPort: 9001
            name: minio-console
          env:
          - name: MINIO_ROOT_USER
            valueFrom:
              secretKeyRef:
                name: brainbox-minio-secret
                key: accesskey
          - name: MINIO_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: brainbox-minio-secret
                key: secretkey
          envFrom:
          - configMapRef:
              name: brainbox-minio-configmap
          volumeMounts:
          - name: minio-data
            mountPath: "/data"
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: brainbox-minio-persistentvolumeclaim

---
#Service
apiVersion: v1
kind: Service
metadata:
  name: brainbox-minio-service
  namespace: brainbox
spec:
  type: NodePort
  selector:
    app: brainbox-minio
  ports:
  - name: api
    protocol: TCP
    port: 9000
    targetPort: 9000
    nodePort: 30001
  - name: console
    protocol: TCP
    port: 9001
    targetPort: 9001
    nodePort: 30002