apiVersion: v1
kind: ConfigMap
metadata:
  name: brainbox-postgresql-configmap
  namespace: brainbox
data:
  01-init.sql: |
    CREATE USER brainboxusersadmin WITH PASSWORD 'brainboxusersadmin';
    CREATE USER brainboxchatsadmin WITH PASSWORD 'brainboxchatsadmin';
    CREATE DATABASE brainboxusers;
    CREATE DATABASE brainboxchats;
    GRANT ALL PRIVILEGES ON DATABASE brainboxusers TO brainboxusersadmin;
    GRANT ALL PRIVILEGES ON DATABASE brainboxchats TO brainboxchatsadmin;
  
  02-init-users.sql: |
    \connect brainboxusers
    CREATE TABLE IF NOT EXISTS users(
      id SERIAL PRIMARY KEY,
      email VARCHAR(255) UNIQUE NOT NULL,
      name VARCHAR(20) UNIQUE NOT NULL,
      password_hash VARCHAR(255) NOT NULL,
      created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC')::TIMESTAMP NOT NULL,
      last_login TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC')::TIMESTAMP NOT NULL
    );
    GRANT ALL PRIVILEGES ON TABLE users TO brainboxusersadmin;
    GRANT USAGE, SELECT ON SEQUENCE users_id_seq TO brainboxusersadmin;
  
  03-init-chats.sql: |
    \connect brainboxchats
    CREATE TABLE IF NOT EXISTS audio_chat(
      id SERIAL PRIMARY KEY,
      user_id INT NOT NULL,
      is_from_user BOOLEAN NOT NULL,
      message_text TEXT NOT NULL,
      audio_uid VARCHAR(36),
      created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC')::TIMESTAMP NOT NULL
    );
    CREATE TABLE IF NOT EXISTS image_chat(
      id SERIAL PRIMARY KEY,
      user_id INT NOT NULL,
      is_from_user BOOLEAN NOT NULL,
      message_text TEXT,
      image_uid VARCHAR(36),
      created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC')::TIMESTAMP NOT NULL
    );
    CREATE TABLE IF NOT EXISTS text_chat(
      id SERIAL PRIMARY KEY,
      user_id INT NOT NULL,
      is_from_user BOOLEAN NOT NULL,
      message_text TEXT NOT NULL,
      created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC')::TIMESTAMP NOT NULL
    );
    GRANT ALL PRIVILEGES ON TABLE audio_chat, image_chat, text_chat TO brainboxchatsadmin;
    GRANT USAGE, SELECT ON SEQUENCE audio_chat_id_seq, image_chat_id_seq, text_chat_id_seq TO brainboxchatsadmin;

  run.sh: |-
    #!/bin/sh
    set -e
    
    # Запускаем PostgreSQL в фоновом режиме
    docker-entrypoint.sh postgres &
    
    # Ждем пока PostgreSQL станет доступен
    until pg_isready -U postgres; do
      sleep 1
    done
    
    # Выполняем скрипты инициализации с обработкой ошибок
    for script in /scripts/01-init.sql /scripts/02-init-users.sql /scripts/03-init-chats.sql; do
      psql -U postgres -f "$script" || true
    done
    
    # Правильный способ остановки PostgreSQL от имени пользователя postgres
    PGUSER=postgres PGPASSWORD=$POSTGRES_PASSWORD pg_ctl -D "$PGDATA" stop -m fast
    
    # Ждем завершения
    wait