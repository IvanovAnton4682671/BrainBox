apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: brainbox-postgresql-statefulset
  namespace: brainbox
spec:
  serviceName: brainbox-postgresql-service
  replicas: 1
  selector:
    matchLabels:
      app: brainbox-postgresql
  template:
    metadata:
      labels:
        app: brainbox-postgresql
    spec:
      securityContext:
        fsGroup: 999
      initContainers:
      - name: db-init
        image: postgres:15-alpine
        command: ["/bin/sh", "-c"]
        args:
        - /scripts/run.sh
        env:
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        securityContext:
          runAsUser: 999
          runAsGroup: 999
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: scripts
          mountPath: /scripts
      containers:
      - name: postgresql
        image: postgres:15-alpine
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: brainbox-postgresql-secret
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: postgresql
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: scripts
        configMap:
          name: brainbox-postgresql-configmap
          defaultMode: 0777
      - name: data
        persistentVolumeClaim:
          claimName: brainbox-postgresql-persistentvolumeclaim